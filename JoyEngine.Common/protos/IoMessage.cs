// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: io_message.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from io_message.proto</summary>
public static partial class IoMessageReflection {

  #region Descriptor
  /// <summary>File descriptor for io_message.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static IoMessageReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChBpb19tZXNzYWdlLnByb3RvIkUKCUlvTWVzc2FnZRIMCgRmcm9tGAEgASgJ",
          "EgoKAnRvGAIgASgJEhAKCHJlcGx5X3RvGAMgASgJEgwKBGJvZHkYBCABKAxi",
          "BnByb3RvMw=="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::IoMessage), global::IoMessage.Parser, new[]{ "From", "To", "ReplyTo", "Body" }, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class IoMessage : pb::IMessage<IoMessage> {
  private static readonly pb::MessageParser<IoMessage> _parser = new pb::MessageParser<IoMessage>(() => new IoMessage());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<IoMessage> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::IoMessageReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public IoMessage() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public IoMessage(IoMessage other) : this() {
    from_ = other.from_;
    to_ = other.to_;
    replyTo_ = other.replyTo_;
    body_ = other.body_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public IoMessage Clone() {
    return new IoMessage(this);
  }

  /// <summary>Field number for the "from" field.</summary>
  public const int FromFieldNumber = 1;
  private string from_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string From {
    get { return from_; }
    set {
      from_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "to" field.</summary>
  public const int ToFieldNumber = 2;
  private string to_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string To {
    get { return to_; }
    set {
      to_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "reply_to" field.</summary>
  public const int ReplyToFieldNumber = 3;
  private string replyTo_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string ReplyTo {
    get { return replyTo_; }
    set {
      replyTo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "body" field.</summary>
  public const int BodyFieldNumber = 4;
  private pb::ByteString body_ = pb::ByteString.Empty;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pb::ByteString Body {
    get { return body_; }
    set {
      body_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as IoMessage);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(IoMessage other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (From != other.From) return false;
    if (To != other.To) return false;
    if (ReplyTo != other.ReplyTo) return false;
    if (Body != other.Body) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (From.Length != 0) hash ^= From.GetHashCode();
    if (To.Length != 0) hash ^= To.GetHashCode();
    if (ReplyTo.Length != 0) hash ^= ReplyTo.GetHashCode();
    if (Body.Length != 0) hash ^= Body.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (From.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(From);
    }
    if (To.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(To);
    }
    if (ReplyTo.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(ReplyTo);
    }
    if (Body.Length != 0) {
      output.WriteRawTag(34);
      output.WriteBytes(Body);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (From.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(From);
    }
    if (To.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(To);
    }
    if (ReplyTo.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ReplyTo);
    }
    if (Body.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(Body);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(IoMessage other) {
    if (other == null) {
      return;
    }
    if (other.From.Length != 0) {
      From = other.From;
    }
    if (other.To.Length != 0) {
      To = other.To;
    }
    if (other.ReplyTo.Length != 0) {
      ReplyTo = other.ReplyTo;
    }
    if (other.Body.Length != 0) {
      Body = other.Body;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          From = input.ReadString();
          break;
        }
        case 18: {
          To = input.ReadString();
          break;
        }
        case 26: {
          ReplyTo = input.ReadString();
          break;
        }
        case 34: {
          Body = input.ReadBytes();
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
